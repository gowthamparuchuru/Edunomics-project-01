{"version":3,"sources":["components/Header.jsx","components/Footer.jsx","components/MainPage.js","App.js","index.js"],"names":["Header","Navbar","bg","variant","OverlayTrigger","placement","overlay","Tooltip","href","target","style","marginLeft","class","Brand","className","align","marginRight","fixed","fontFamily","Date","getFullYear","MainPage","props","state","buckets_array","tasks","bucketName","showBucketModal","name","description","rank","assignees","assignee","bucket","start_date","due_date","progress","label_color","priority","showAddModal","editModal","showEditModal","showSettings","draggedCard","dragOn","draggedBucket","autoSave","window","localStorage","setItem","this","axios","post","Object","assign","then","response","error","console","log","alert","data","setState","getItem","get","arr","values","i","setInterval","autoSaveData","n","keys","length","id","task","temp","push","e","index","preventDefault","target_index","indexOf","filter","ele","splice","task_id","toList","Number","draggedRank","droppedRank","tasks_array","buckets","j","Container","fluid","Row","Col","Button","onClick","map","onDragOver","dragOver","onDrop","dropCard","Alert","padding","draggable","onDragStart","onDragEnd","bucketDrop","marginBottom","cursor","Card","border","backgroundColor","borderWidth","boxShadow","dragStart","dragEnd","dropVertical","Body","Text","width","color","editTask","Modal","size","centered","show","onHide","closeButton","Title","Form","Group","Label","Control","type","onChange","value","Footer","block","saveBucket","disabled","InputGroup","Prepend","FormControl","xs","placeholder","Append","Table","striped","bordered","hover","person","DropdownButton","title","onSelect","eventKey","Dropdown","Item","selected","date","as","rows","saveEditTask","addTask","checked","onstyle","offstyle","saveData","confirm","todo","doing","done","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.972c2cae.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, OverlayTrigger, Tooltip } from \"react-bootstrap\";\r\n\r\nfunction Header() {\r\n  //Header\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\">\r\n      <OverlayTrigger\r\n        placement=\"right\"\r\n        overlay={<Tooltip>Know about Kanban</Tooltip>}\r\n      >\r\n        <a\r\n          href=\"https://www.digite.com/kanban/what-is-kanban/\"\r\n          target=\"__blank\"\r\n          style={{ marginLeft: \"15px\" }}\r\n        >\r\n          <i class=\"fab fa-jira fa-2x jira-icon\"></i>\r\n        </a>\r\n      </OverlayTrigger>\r\n      <Navbar.Brand className=\"ml-auto mr-auto\" align=\"center\">\r\n        <h4 className=\"main-heading\">Kanban Dashboard</h4>\r\n      </Navbar.Brand>\r\n      <OverlayTrigger\r\n        placement=\"left\"\r\n        overlay={<Tooltip>View Source Code</Tooltip>}\r\n      >\r\n        <a\r\n          href=\"https://github.com/ESLABS101/cx-deployer-team-beta\"\r\n          target=\"__blank\"\r\n          style={{ marginRight: \"15px\" }}\r\n        >\r\n          <i class=\"fab fa-github fa-2x github-icon\"></i>\r\n        </a>\r\n      </OverlayTrigger>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Navbar } from \"react-bootstrap\";\r\n\r\nfunction Header() {\r\n  return (\r\n    <Navbar bg=\"dark\" variant=\"dark\" fixed=\"bottom\" className=\"footer\">\r\n      <Navbar.Brand className=\"ml-auto mr-auto footer\">\r\n        <a\r\n          className=\"footer-link\"\r\n          href=\"https://edunomics.in/\"\r\n          target=\"__blank\"\r\n        >\r\n          Edunomics\r\n        </a>{\" \"}\r\n        <span style={{ fontFamily: \"Arial, Helvetica, sans-serif\" }}>©</span>{\" \"}\r\n        {new Date().getFullYear()}\r\n      </Navbar.Brand>\r\n    </Navbar>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Button,\r\n  Container,\r\n  Row,\r\n  Col,\r\n  Card,\r\n  Modal,\r\n  Form,\r\n  Alert,\r\n  InputGroup,\r\n  FormControl,\r\n  DropdownButton,\r\n  Dropdown,\r\n  Table,\r\n} from \"react-bootstrap\";\r\nimport BootstrapSwitchButton from \"bootstrap-switch-button-react\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport axios from \"axios\";\r\nimport \"./style.css\";\r\nimport Header from \"./Header\";\r\nimport Footer from \"./Footer\";\r\n\r\nclass MainPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      //data\r\n      buckets_array: [],\r\n      tasks: {},\r\n      bucketName: \"\",\r\n      showBucketModal: false,\r\n\r\n      //These are task properties.\r\n      name: \"\",\r\n      description: \"\",\r\n      rank: \"\",\r\n      assignees: [],\r\n      assignee: \"\",\r\n      bucket: \"To do\",\r\n      start_date: new Date(),\r\n      due_date: new Date(),\r\n      progress: \"\",\r\n      label_color: \"#3797a4\",\r\n      priority: \"\",\r\n\r\n      //Modal Show props.\r\n      showAddModal: false,\r\n      editModal: {},\r\n      showEditModal: false,\r\n      showSettings: false,\r\n\r\n      //dragging variables.\r\n      draggedCard: null,\r\n      dragOn: false,\r\n\r\n      draggedBucket: null,\r\n\r\n      autoSave: false,\r\n    };\r\n  }\r\n\r\n  autoSaveData() {\r\n    window.localStorage.setItem(\"autoSave\", this.state.autoSave);\r\n    // http://localhost:3001/bucket_array\r\n    this.state.autoSave &&\r\n      axios\r\n        .post(\r\n          \"https://kanban-back-end.herokuapp.com/buckets/save\",\r\n          Object.assign({}, this.state.buckets_array)\r\n        )\r\n        .then(\r\n          (response) => {\r\n            // console.log(response.data);\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n            alert(\"Error. Can not Load Data.\");\r\n          }\r\n        );\r\n\r\n    this.state.autoSave &&\r\n      axios\r\n        .post(\r\n          \"https://kanban-back-end.herokuapp.com/tasks/save\",\r\n          this.state.tasks\r\n        )\r\n        .then(\r\n          (response) => {\r\n            // console.log(response.data);\r\n          },\r\n          (error) => {\r\n            console.log(error);\r\n            alert(\"Error. Can not Load Data.\");\r\n          }\r\n        );\r\n  }\r\n\r\n  saveData() {\r\n    axios\r\n      .post(\r\n        \"https://kanban-back-end.herokuapp.com/buckets/save\",\r\n        Object.assign({}, this.state.buckets_array)\r\n      )\r\n      .then(\r\n        (response) => {\r\n          console.log(response.data);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n          alert(\"Error. Can not Load Data.\");\r\n        }\r\n      );\r\n\r\n    axios\r\n      .post(\r\n        \"https://kanban-back-end.herokuapp.com/tasks/save\",\r\n        this.state.tasks\r\n      )\r\n      .then(\r\n        (response) => {\r\n          console.log(response.data);\r\n        },\r\n        (error) => {\r\n          console.log(error);\r\n          alert(\"Error. Can not Load Data.\");\r\n        }\r\n      );\r\n\r\n    this.setState({ showSettings: false });\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      autoSave:\r\n        window.localStorage.getItem(\"autoSave\") === \"true\" ? true : false,\r\n    });\r\n    // http://localhost:3001/bucket_array\r\n    axios.get(\"https://kanban-back-end.herokuapp.com/buckets\").then(\r\n      (response) => {\r\n        var arr = Object.values(response.data);\r\n        for (var i in arr) {\r\n          arr[i] = arr[i][\"name\"];\r\n        }\r\n        // console.log(arr);\r\n        this.setState({ buckets_array: arr });\r\n      },\r\n      (error) => {\r\n        console.log(error);\r\n        // alert(\"Error. Can not Load Data.\");\r\n      }\r\n    );\r\n    // http://localhost:3001/tasks\r\n    axios.get(\"https://kanban-back-end.herokuapp.com/tasks\").then(\r\n      (response) => {\r\n        // console.log(response.data);\r\n        var tasks = response.data;\r\n        for (var i in tasks) {\r\n          tasks[i].start_date = new Date(tasks[i].start_date);\r\n          tasks[i].due_date = new Date(tasks[i].due_date);\r\n        }\r\n\r\n        this.setState({ tasks: tasks });\r\n      }\r\n      // (error) => {\r\n      //   console.log(error);\r\n      //   alert(\"Error. Can not Load Data.\");\r\n      // }\r\n    );\r\n\r\n    setInterval(() => {\r\n      this.autoSaveData();\r\n    }, 5000);\r\n  }\r\n\r\n  // This function is used to add a new task\r\n  addTask() {\r\n    var tasks = this.state.tasks;\r\n    var n = Object.keys(tasks).length + 1;\r\n    var rank = 1;\r\n    // if (this.state.bucket.length === 0) {\r\n    //   var first=this.state.buckets_array[0];\r\n    //   this.setState({ bucket:first });\r\n    // }\r\n    // console.log(this.state.buckets_array[0]);\r\n    for (var i in tasks) {\r\n      if (tasks[i].bucket === this.state.bucket) rank++;\r\n    }\r\n    tasks[n] = {\r\n      id: `${n}`,\r\n      rank: rank,\r\n      bucket: this.state.bucket,\r\n      name: this.state.name,\r\n      description: this.state.description,\r\n      assignees: this.state.assignees,\r\n      start_date: this.state.start_date,\r\n      due_date: this.state.due_date,\r\n      progress: this.state.progress,\r\n      label_color: this.state.label_color,\r\n      priority: this.state.priority,\r\n    };\r\n    console.log(tasks);\r\n    this.setState({\r\n      tasks: tasks,\r\n      showAddModal: false,\r\n      name: \"\",\r\n      description: \"\",\r\n      assignees: [],\r\n      assignee: \"\",\r\n      rank: \"\",\r\n      bucket: \"\",\r\n      start_date: new Date(),\r\n      due_date: new Date(),\r\n      progress: \"\",\r\n      label_color: \"#3797a4\",\r\n      priority: \"\",\r\n    });\r\n  }\r\n\r\n  editTask(task) {\r\n    this.setState({\r\n      editModal: task,\r\n      name: task.name,\r\n      description: task.description,\r\n      bucket: task.bucket,\r\n      assignees: task.assignees,\r\n      start_date: task.start_date,\r\n      due_date: task.due_date,\r\n      progress: task.progress,\r\n      label_color: task.label_color,\r\n      priority: task.priority,\r\n      showEditModal: true,\r\n    });\r\n  }\r\n\r\n  saveEditTask() {\r\n    var temp = this.state.editModal;\r\n    temp[\"name\"] = this.state.name;\r\n    temp[\"description\"] = this.state.description;\r\n    temp[\"bucket\"] = this.state.bucket;\r\n    temp[\"assignees\"] = this.state.assignees;\r\n    temp[\"start_date\"] = this.state.start_date;\r\n    temp[\"due_date\"] = this.state.due_date;\r\n    temp[\"progress\"] = this.state.progress;\r\n    temp[\"label_color\"] = this.state.label_color;\r\n    temp[\"priority\"] = this.state.priority;\r\n    var tasks = this.state.tasks;\r\n    tasks[temp.id] = temp;\r\n    this.setState({ tasks: tasks, showEditModal: false });\r\n    this.setState({\r\n      name: \"\",\r\n      description: \"\",\r\n      rank: \"\",\r\n      bucket: \"\",\r\n      assignees: [],\r\n      assignee: \"\",\r\n      start_date: new Date(),\r\n      due_date: new Date(),\r\n      progress: \"\",\r\n      label_color: \"#3797a4\",\r\n      priority: \"\",\r\n    });\r\n  }\r\n\r\n  saveBucket(bucket) {\r\n    if (bucket === null) {\r\n      var arr = this.state.buckets_array;\r\n      arr.push(this.state.bucketName);\r\n      this.setState({\r\n        buckets_array: arr,\r\n        showBucketModal: false,\r\n        bucketName: \"\",\r\n      });\r\n    } else {\r\n      this.setState({ showBucketModal: true, bucketName: bucket });\r\n    }\r\n  }\r\n\r\n  dragStart(e, task) {\r\n    this.setState({ draggedCard: task });\r\n  }\r\n\r\n  dragEnd(e) {\r\n    this.setState({ draggedCard: null });\r\n  }\r\n\r\n  dragOver(e, index) {\r\n    e.preventDefault();\r\n  }\r\n\r\n  dropCard(e, index) {\r\n    if (this.state.draggedBucket !== null) {\r\n      var draggedBucket = this.state.draggedBucket;\r\n      var arr = this.state.buckets_array;\r\n      var target = arr[index];\r\n      var target_index = arr.indexOf(target);\r\n      arr = arr.filter(function (ele) {\r\n        return ele !== draggedBucket;\r\n      });\r\n      console.log(arr, target_index);\r\n      arr.splice(target_index, 0, draggedBucket);\r\n      this.setState({ buckets_array: arr });\r\n      return;\r\n    }\r\n    if (this.state.draggedCard.bucket === this.state.buckets_array[index]) {\r\n      return;\r\n    }\r\n    let task = this.state.draggedCard;\r\n    let task_id = task.id;\r\n    let toList = index;\r\n    var tasks = this.state.tasks;\r\n    var bucket = this.state.buckets_array[toList];\r\n\r\n    var rank = 1;\r\n    for (var i in tasks) {\r\n      if (tasks[i].bucket === bucket) rank = rank + 1;\r\n    }\r\n\r\n    for (i in tasks) {\r\n      if (\r\n        tasks[i].bucket === task.bucket &&\r\n        Number(tasks[i].rank) > Number(task.rank)\r\n      ) {\r\n        tasks[i].rank--;\r\n      }\r\n    }\r\n    tasks[task_id].bucket = this.state.buckets_array[toList];\r\n    tasks[task_id].rank = rank;\r\n\r\n    this.setState({ tasks: tasks });\r\n    console.log(tasks);\r\n  }\r\n\r\n  dropVertical(e, task) {\r\n    if (this.state.draggedBucket !== null) {\r\n      return;\r\n    }\r\n    if (this.state.draggedCard.bucket !== task.bucket) {\r\n      return;\r\n    }\r\n\r\n    var draggedRank = this.state.draggedCard.rank;\r\n    var droppedRank = task.rank;\r\n    var tasks = this.state.tasks;\r\n    if (draggedRank > droppedRank) {\r\n      for (var i in tasks) {\r\n        if (\r\n          tasks[i].bucket === task.bucket &&\r\n          tasks[i].rank >= droppedRank &&\r\n          tasks[i].rank <= draggedRank\r\n        ) {\r\n          tasks[i].rank++;\r\n        }\r\n      }\r\n      tasks[this.state.draggedCard.id].rank = droppedRank;\r\n      this.setState({ tasks: tasks });\r\n    } else if (draggedRank < droppedRank) {\r\n      for (i in tasks) {\r\n        if (\r\n          tasks[i].bucket === task.bucket &&\r\n          tasks[i].rank <= droppedRank &&\r\n          tasks[i].rank >= draggedRank\r\n        ) {\r\n          tasks[i].rank--;\r\n        }\r\n      }\r\n      tasks[this.state.draggedCard.id].rank = droppedRank;\r\n      this.setState({ tasks: tasks });\r\n    }\r\n  }\r\n\r\n  bucketDrop(e, target) {\r\n    if (this.state.draggedBucket === null) {\r\n      return;\r\n    }\r\n    var draggedBucket = this.state.draggedBucket;\r\n    var arr = this.state.buckets_array;\r\n    var target_index = arr.indexOf(target);\r\n    arr = arr.filter(function (ele) {\r\n      return ele !== draggedBucket;\r\n    });\r\n    console.log(arr, target_index);\r\n    arr.splice(target_index, 0, draggedBucket);\r\n    this.setState({ buckets_array: arr });\r\n  }\r\n\r\n  // This is the render function\r\n  render() {\r\n    var tasks_array = [];\r\n    var tasks = this.state.tasks;\r\n    var buckets = this.state.buckets_array;\r\n    var n = Object.keys(tasks).length;\r\n    for (var i in buckets) {\r\n      for (var j = 1; j <= n; j++) {\r\n        for (var task in tasks) {\r\n          if (\r\n            Number(tasks[task].rank) === j &&\r\n            tasks[task].bucket === buckets[i]\r\n          )\r\n            tasks_array.push(tasks[task]);\r\n        }\r\n      }\r\n    }\r\n\r\n    return (\r\n      <html>\r\n        <div className=\"App\">\r\n          <Header />\r\n          {/* ----------------------------------------------Container-------------------------------------------- */}\r\n          <Container className=\"board\" fluid>\r\n            {/* ---------------------Add Task Button------------------- */}\r\n            <Row className=\"mt-2 mb-2\">\r\n              <Col align=\"center\">\r\n                <Button\r\n                  className=\"mr-3\"\r\n                  onClick={() =>\r\n                    this.setState({\r\n                      showAddModal: true,\r\n                      tasks: tasks,\r\n                      name: \"\",\r\n                      description: \"\",\r\n                      assignees: [],\r\n                      assignee: \"\",\r\n                      rank: \"\",\r\n                      bucket: \"To do\",\r\n                      start_date: new Date(),\r\n                      due_date: new Date(),\r\n                      progress: \"\",\r\n                      label_color: \"#3797a4\",\r\n                      priority: \"\",\r\n                    })\r\n                  }\r\n                  variant=\"info\"\r\n                >\r\n                  <i class=\"fas fa-plus-circle  mr-2\"></i>Add Task\r\n                </Button>\r\n                <Button\r\n                  onClick={() => this.setState({ showBucketModal: true })}\r\n                  variant=\"warning\"\r\n                >\r\n                  <i class=\"fas fa-plus-circle  mr-2\"></i>Add Bucket\r\n                </Button>\r\n                <Button\r\n                  variant=\"outline-dark\"\r\n                  className=\"float-right mr-4\"\r\n                  onClick={() => this.setState({ showSettings: true })}\r\n                >\r\n                  Settings<i class=\"fas fa-cog  settings-icon ml-2\"></i>\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n\r\n            {/* ---------------------Task Lists------------------- */}\r\n            <Row className=\"board\">\r\n              {/* ---------------------Buckets------------------- */}\r\n              {this.state.buckets_array.map((bucket) => (\r\n                <Col\r\n                  id={this.state.buckets_array.indexOf(bucket)}\r\n                  className=\"bucket\"\r\n                  onDragOver={(e) => this.dragOver(e)}\r\n                  onDrop={(e) =>\r\n                    this.dropCard(e, this.state.buckets_array.indexOf(bucket))\r\n                  }\r\n                >\r\n                  <Alert\r\n                    variant=\"primary\"\r\n                    style={{ padding: \"5px\" }}\r\n                    draggable=\"true\"\r\n                    onDragStart={(e) => {\r\n                      this.setState({ draggedBucket: bucket });\r\n                    }}\r\n                    onDragEnd={(e) => {\r\n                      this.setState({ draggedBucket: null });\r\n                    }}\r\n                    onDragOver={(e) => {\r\n                      e.preventDefault();\r\n                    }}\r\n                    onDrop={(e) => this.bucketDrop(e, bucket)}\r\n                  >\r\n                    <Row>\r\n                      <Col></Col>\r\n                      <Col>\r\n                        <h6 align=\"center\" style={{ marginBottom: \"0px\" }}>\r\n                          {bucket}\r\n                        </h6>\r\n                      </Col>\r\n                      <Col>\r\n                        <span style={{ cursor: \"pointer\" }}>\r\n                          <i\r\n                            class=\"fas fa-trash float-right bucket-edit\"\r\n                            onClick={() => {\r\n                              var arr = this.state.buckets_array;\r\n\r\n                              arr = arr.filter(function (ele) {\r\n                                return ele !== bucket;\r\n                              });\r\n                              var tasks = this.state.tasks;\r\n                              for (var i in tasks) {\r\n                                if (tasks[i].bucket === bucket) {\r\n                                  delete tasks[i];\r\n                                }\r\n                              }\r\n                              this.setState({\r\n                                buckets_array: arr,\r\n                                tasks: tasks,\r\n                              });\r\n                            }}\r\n                          ></i>\r\n                        </span>\r\n                      </Col>\r\n                    </Row>\r\n                  </Alert>\r\n                  {/* this.state.tasks */}\r\n                  {Object.values(tasks_array).map((task) =>\r\n                    task.bucket === bucket ? (\r\n                      <Card\r\n                        border=\"dark\"\r\n                        style={{\r\n                          backgroundColor: \"#fff4e3\",\r\n                          borderWidth: \"1px\",\r\n                          boxShadow: \"3px 3px 5px 1px #888888\",\r\n                        }}\r\n                        className=\"mt-2 task-card\"\r\n                        draggable=\"true\"\r\n                        onDragStart={(e) => this.dragStart(e, task)}\r\n                        onDragEnd={(e) => this.dragEnd(e)}\r\n                        onDrop={(e) => this.dropVertical(e, task)}\r\n                      >\r\n                        <Card.Body style={{ padding: \"3% 1% 3% 3%\" }}>\r\n                          <Card.Text\r\n                            style={{ width: \"90%\" }}\r\n                            className=\"float-left mb-0 mt-1\"\r\n                          >\r\n                            <i\r\n                              class=\"fas fa-circle\"\r\n                              style={{ color: task.label_color }}\r\n                            ></i>{\" \"}\r\n                            {task.name}\r\n                          </Card.Text>\r\n\r\n                          <span\r\n                            className=\"float-right mr-2\"\r\n                            style={{ cursor: \"pointer\", width: \"10px\" }}\r\n                            // variant=\"outline-info\"\r\n                            // size=\"sm\"\r\n                            onClick={() => this.editTask(task)}\r\n                          >\r\n                            <i class=\"fas fa-ellipsis-v edit-dots\"></i>\r\n                          </span>\r\n                        </Card.Body>\r\n                      </Card>\r\n                    ) : null\r\n                  )}\r\n                </Col>\r\n              ))}\r\n            </Row>\r\n          </Container>\r\n\r\n          {/* ---------------------Pop Up Modal for Adding NEW Bucket------------------- */}\r\n          <Modal\r\n            size=\"md\"\r\n            centered\r\n            show={this.state.showBucketModal}\r\n            onHide={() => this.setState({ showBucketModal: false })}\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Add New Modal</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Form>\r\n                <Form.Group>\r\n                  <Form.Label>Name :</Form.Label>\r\n                  <Form.Control\r\n                    type=\"text\"\r\n                    onChange={(e) =>\r\n                      this.setState({ bucketName: e.target.value })\r\n                    }\r\n                    value={this.state.bucketName}\r\n                  />\r\n                </Form.Group>\r\n              </Form>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button\r\n                block\r\n                variant=\"primary\"\r\n                onClick={() => {\r\n                  this.saveBucket(null);\r\n                }}\r\n                disabled={this.state.bucketName === \"\" ? true : false}\r\n              >\r\n                Save Bucket\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          {/* ---------------------Pop Up Modal for EDITING TASK details------------------- */}\r\n          <Modal\r\n            size=\"lg\"\r\n            centered\r\n            show={this.state.showEditModal}\r\n            onHide={() => this.setState({ showEditModal: false })}\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Edit Task</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <InputGroup size=\"sm\">\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>Name</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  size=\"sm\"\r\n                  onChange={(e) => this.setState({ name: e.target.value })}\r\n                  value={this.state.name}\r\n                />\r\n              </InputGroup>\r\n              <hr />\r\n\r\n              <Row>\r\n                <Col xs={2} className=\"text-center\">\r\n                <i class=\"fas fa-user-plus\"></i> Assignees:\r\n                </Col>\r\n                <Col>\r\n                  <InputGroup className=\"w-50\" size=\"sm\">\r\n                    <FormControl\r\n                      placeholder=\"Add Assignee\"\r\n                      onChange={(e) =>\r\n                        this.setState({ assignee: e.target.value })\r\n                      }\r\n                      value={this.state.assignee}\r\n                    />\r\n                    <InputGroup.Append>\r\n                      <Button\r\n                        variant=\"outline-info\"\r\n                        onClick={() => {\r\n                          var temp = this.state.assignees;\r\n                          temp.push(this.state.assignee);\r\n                          this.setState({ assignees: temp, assignee: \"\" });\r\n                        }}\r\n                      >\r\n                        Add\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"outline-danger\"\r\n                        onClick={() => {\r\n                          this.setState({ assignees: [], assignee: \"\" });\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </InputGroup.Append>\r\n                  </InputGroup>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Table\r\n                striped\r\n                bordered\r\n                hover\r\n                size=\"sm\"\r\n                className=\"mt-3 w-80 text-center\"\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    {this.state.assignees.map((person) => (\r\n                      <th>{person}</th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n              </Table>\r\n              <hr />\r\n              <Row className=\"mt-3\">\r\n                <Col>\r\n                  <Row>\r\n                    <Col className=\"text-center\">Bucket:</Col>\r\n                    <Col>\r\n                      <DropdownButton\r\n                        title={\r\n                          this.state.bucket === \"\"\r\n                            ? \"select...\"\r\n                            : this.state.bucket\r\n                        }\r\n                        size=\"sm\"\r\n                        onSelect={(eventKey) => {\r\n                          this.setState({ bucket: eventKey });\r\n                        }}\r\n                      >\r\n                        {this.state.buckets_array.map((bucket) => (\r\n                          <Dropdown.Item eventKey={bucket}>\r\n                            {bucket}\r\n                          </Dropdown.Item>\r\n                        ))}\r\n                      </DropdownButton>\r\n                    </Col>\r\n                  </Row>\r\n                  <hr />\r\n                  <Row className=\"mt-3\">\r\n                    <Col className=\"text-center\">\r\n                      <span className=\"ml-4\">Start Date:</span>\r\n                    </Col>\r\n                    <Col style={{ padding: \"0\" }}>\r\n                      <DatePicker\r\n                        selected={this.state.start_date}\r\n                        onChange={(date) => {\r\n                          this.setState({\r\n                            start_date: date,\r\n                          });\r\n                        }}\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col>\r\n                  <Row>\r\n                    <Col className=\"text-center\">Proress:</Col>\r\n                    <Col>\r\n                      <DropdownButton\r\n                        title={\r\n                          this.state.progress === \"\"\r\n                            ? \"select...\"\r\n                            : this.state.progress\r\n                        }\r\n                        size=\"sm\"\r\n                        onSelect={(eventKey) =>\r\n                          this.setState({ progress: eventKey })\r\n                        }\r\n                      >\r\n                        <Dropdown.Item eventKey=\"Not Started\">\r\n                          Not Started\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"In Progress\">\r\n                          In Progress\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"Completed\">\r\n                          Completed\r\n                        </Dropdown.Item>\r\n                      </DropdownButton>\r\n                    </Col>\r\n                  </Row>\r\n                  <hr />\r\n                  <Row className=\"mt-3\">\r\n                    <Col className=\"text-center\">\r\n                      <span className=\"ml-4\">Due Date:</span>\r\n                    </Col>\r\n                    <Col style={{ padding: \"0 15px 0 0\" }}>\r\n                      <div className=\"customDatePickerWidth\">\r\n                        <DatePicker\r\n                          selected={this.state.due_date}\r\n                          onChange={(date) =>\r\n                            this.setState({\r\n                              due_date: date,\r\n                            })\r\n                          }\r\n                        />\r\n                      </div>\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n              <hr />\r\n              <InputGroup className=\"mt-3\">\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>Description :</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  size=\"sm\"\r\n                  as=\"textarea\"\r\n                  rows=\"2\"\r\n                  onChange={(e) =>\r\n                    this.setState({ description: e.target.value })\r\n                  }\r\n                  value={this.state.description}\r\n                />\r\n              </InputGroup>\r\n              <hr />\r\n              <Row className=\"mt-3\">\r\n                <Col className=\"text-center\">Label Colour:</Col>\r\n                <Col>\r\n                  <DropdownButton\r\n                    title={\r\n                      this.state.label_color === \"#3797a4\"\r\n                        ? \"default\"\r\n                        : this.state.label_color\r\n                    }\r\n                    size=\"sm\"\r\n                    onSelect={(eventKey) =>\r\n                      this.setState({ label_color: eventKey })\r\n                    }\r\n                  >\r\n                    <Dropdown.Item eventKey=\"red\">red</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"green\">green</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"yellow\">yellow</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"orange\">orange</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"blue\">blue</Dropdown.Item>\r\n                  </DropdownButton>\r\n                </Col>\r\n                <Col className=\"text-center\">priority:</Col>\r\n                <Col>\r\n                  <DropdownButton\r\n                    title={\r\n                      this.state.priority === \"\"\r\n                        ? \"select...\"\r\n                        : this.state.priority\r\n                    }\r\n                    size=\"sm\"\r\n                    onSelect={(eventKey) =>\r\n                      this.setState({ priority: eventKey })\r\n                    }\r\n                  >\r\n                    <Dropdown.Item eventKey=\"low\">low</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"medium\">medium</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"high\">high</Dropdown.Item>\r\n                  </DropdownButton>\r\n                </Col>\r\n              </Row>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button\r\n                variant=\"danger\"\r\n                onClick={() => {\r\n                  var task = this.state.editModal;\r\n                  var bucket = task.bucket;\r\n                  var id = task.id;\r\n                  var temp = this.state.tasks;\r\n                  for (var i in temp) {\r\n                    if (temp[i].bucket === bucket && temp[i].rank > task.rank)\r\n                      temp[i].rank--;\r\n                  }\r\n                  delete temp[id];\r\n                  this.setState({ tasks: temp, showEditModal: false });\r\n                }}\r\n              >\r\n                <i class=\"far fa-trash-alt mr-2\"></i>Delete Task\r\n              </Button>\r\n              <Button\r\n                variant=\"primary\"\r\n                onClick={() => this.saveEditTask()}\r\n                disabled={this.state.name === \"\" ? true : false}\r\n              >\r\n                Save Edits\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          {/* ---------------------Pop Up Modal for ADDING NEW TASK details------------------- */}\r\n          <Modal\r\n            size=\"lg\"\r\n            centered\r\n            show={this.state.showAddModal}\r\n            onHide={() => this.setState({ showAddModal: false })}\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Enter Task</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <InputGroup size=\"sm\">\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>Name</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  type=\"text\"\r\n                  size=\"sm\"\r\n                  onChange={(e) => this.setState({ name: e.target.value })}\r\n                />\r\n              </InputGroup>\r\n              <hr />\r\n              <Row>\r\n                <Col xs={2} className=\"text-center\">\r\n                <i class=\"fas fa-user-plus\"></i> Assignees:\r\n                </Col>\r\n                <Col>\r\n                  <InputGroup className=\"w-50\" size=\"sm\">\r\n                    <FormControl\r\n                      placeholder=\"Add Assignee\"\r\n                      onChange={(e) =>\r\n                        this.setState({ assignee: e.target.value })\r\n                      }\r\n                      value={this.state.assignee}\r\n                    />\r\n                    <InputGroup.Append>\r\n                      <Button\r\n                        variant=\"outline-info\"\r\n                        onClick={() => {\r\n                          var temp = this.state.assignees;\r\n                          temp.push(this.state.assignee);\r\n                          this.setState({ assignees: temp, assignee: \"\" });\r\n                        }}\r\n                      >\r\n                        Add\r\n                      </Button>\r\n                      <Button\r\n                        variant=\"outline-danger\"\r\n                        onClick={() => {\r\n                          this.setState({ assignees: [], assignee: \"\" });\r\n                        }}\r\n                      >\r\n                        Delete\r\n                      </Button>\r\n                    </InputGroup.Append>\r\n                  </InputGroup>\r\n                </Col>\r\n              </Row>\r\n\r\n              <Table\r\n                striped\r\n                bordered\r\n                hover\r\n                size=\"sm\"\r\n                className=\"mt-3 w-80 text-center\"\r\n              >\r\n                <thead>\r\n                  <tr>\r\n                    {this.state.assignees.map((person) => (\r\n                      <th>{person}</th>\r\n                    ))}\r\n                  </tr>\r\n                </thead>\r\n              </Table>\r\n              <hr />\r\n              <Row className=\"mt-3\">\r\n                <Col>\r\n                  <Row>\r\n                    <Col className=\"text-center\">Bucket:</Col>\r\n                    <Col>\r\n                      <DropdownButton\r\n                        title={\r\n                          this.state.bucket === \"\"\r\n                            ? \"select...\"\r\n                            : this.state.bucket\r\n                        }\r\n                        size=\"sm\"\r\n                        onSelect={(eventKey) => {\r\n                          this.setState({ bucket: eventKey });\r\n                        }}\r\n                      >\r\n                        {this.state.buckets_array.map((bucket) => (\r\n                          <Dropdown.Item eventKey={bucket}>\r\n                            {bucket}\r\n                          </Dropdown.Item>\r\n                        ))}\r\n                      </DropdownButton>\r\n                    </Col>\r\n                  </Row>\r\n                  <hr />\r\n                  <Row className=\"mt-3\">\r\n                    <Col className=\"text-center\">\r\n                      <span className=\"ml-4\">Start Date:</span>\r\n                    </Col>\r\n                    <Col>\r\n                      <DatePicker\r\n                        selected={this.state.start_date}\r\n                        onChange={(date) =>\r\n                          this.setState({\r\n                            start_date: date,\r\n                          })\r\n                        }\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n                <Col>\r\n                  <Row>\r\n                    <Col className=\"text-center\">Progress:</Col>\r\n                    <Col>\r\n                      <DropdownButton\r\n                        title={\r\n                          this.state.progress === \"\"\r\n                            ? \"select...\"\r\n                            : this.state.progress\r\n                        }\r\n                        size=\"sm\"\r\n                        onSelect={(eventKey) =>\r\n                          this.setState({ progress: eventKey })\r\n                        }\r\n                      >\r\n                        <Dropdown.Item eventKey=\"Not Started\">\r\n                          Not Started\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"In Progress\">\r\n                          In Progress\r\n                        </Dropdown.Item>\r\n                        <Dropdown.Item eventKey=\"Completed\">\r\n                          Completed\r\n                        </Dropdown.Item>\r\n                      </DropdownButton>\r\n                    </Col>\r\n                  </Row>\r\n                  <hr />\r\n                  <Row className=\"mt-3\">\r\n                    <Col className=\"text-center\">\r\n                      <span className=\"ml-5\">Due Date:</span>\r\n                    </Col>\r\n                    <Col>\r\n                      <DatePicker\r\n                        selected={this.state.due_date}\r\n                        onChange={(date) =>\r\n                          this.setState({\r\n                            due_date: date,\r\n                          })\r\n                        }\r\n                      />\r\n                    </Col>\r\n                  </Row>\r\n                </Col>\r\n              </Row>\r\n              <hr />\r\n              <InputGroup className=\"mt-3\">\r\n                <InputGroup.Prepend>\r\n                  <InputGroup.Text>Description :</InputGroup.Text>\r\n                </InputGroup.Prepend>\r\n                <FormControl\r\n                  as=\"textarea\"\r\n                  rows=\"2\"\r\n                  onChange={(e) =>\r\n                    this.setState({ description: e.target.value })\r\n                  }\r\n                />\r\n              </InputGroup>\r\n              <hr />\r\n              <Row className=\"mt-3\">\r\n                <Col className=\"text-center\">Label Colour:</Col>\r\n                <Col>\r\n                  <DropdownButton\r\n                    title={\r\n                      this.state.label_color === \"#3797a4\"\r\n                        ? \"default\"\r\n                        : this.state.label_color\r\n                    }\r\n                    size=\"sm\"\r\n                    onSelect={(eventKey) =>\r\n                      this.setState({ label_color: eventKey })\r\n                    }\r\n                  >\r\n                    <Dropdown.Item eventKey=\"red\">red</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"green\">green</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"yellow\">yellow</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"orange\">orange</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"blue\">blue</Dropdown.Item>\r\n                  </DropdownButton>\r\n                </Col>\r\n                <Col className=\"text-center\">priority:</Col>\r\n                <Col>\r\n                  <DropdownButton\r\n                    title={\r\n                      this.state.priority === \"\"\r\n                        ? \"select...\"\r\n                        : this.state.priority\r\n                    }\r\n                    size=\"sm\"\r\n                    onSelect={(eventKey) =>\r\n                      this.setState({ priority: eventKey })\r\n                    }\r\n                  >\r\n                    <Dropdown.Item eventKey=\"low\">low</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"medium\">medium</Dropdown.Item>\r\n                    <Dropdown.Item eventKey=\"high\">high</Dropdown.Item>\r\n                  </DropdownButton>\r\n                </Col>\r\n              </Row>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              <Button\r\n                block\r\n                variant=\"info\"\r\n                onClick={() => this.addTask()}\r\n                disabled={this.state.name === \"\" ? true : false}\r\n              >\r\n                Add Task\r\n              </Button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          {/* ---------------------Pop Up Modal for SETTINGS------------------- */}\r\n          <Modal\r\n            show={this.state.showSettings}\r\n            onHide={() => this.setState({ showSettings: false })}\r\n          >\r\n            <Modal.Header closeButton>\r\n              <Modal.Title>Settings</Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <Container fluid>\r\n                <Row>\r\n                  <Col>\r\n                    <p className=\"float-right mr-3\">Auto Save :</p>\r\n                  </Col>\r\n                  <Col>\r\n                    <span className=\"float-left ml-3\">\r\n                      <BootstrapSwitchButton\r\n                        checked={this.state.autoSave}\r\n                        onstyle=\"success\"\r\n                        offstyle=\"danger\"\r\n                        size=\"sm\"\r\n                        onChange={(checked) => {\r\n                          this.setState({ autoSave: checked });\r\n                        }}\r\n                      />\r\n                    </span>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col className=\"text-center mt-3\">\r\n                    <Button\r\n                      variant=\"success\"\r\n                      disabled={this.state.autoSave ? true : false}\r\n                      onClick={() => {\r\n                        this.saveData();\r\n                      }}\r\n                    >\r\n                      <i class=\"fas fa-save mr-2\"></i>Save Chart\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                  <Col className=\"text-center mt-3 mb-3\">\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      onClick={() => {\r\n                        this.setState({ showSettings: false });\r\n                        if (window.confirm(\"Are you sure to reset?\"))\r\n                          this.setState({\r\n                            todo: {},\r\n                            doing: {},\r\n                            done: {},\r\n                          });\r\n                      }}\r\n                    >\r\n                      <i class=\"fas fa-broom mr-2\"></i>Reset Chart\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </Container>\r\n            </Modal.Body>\r\n          </Modal>\r\n          <Footer />\r\n        </div>\r\n      </html>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport MainPage from './components/MainPage';\r\n\r\nfunction App() {\r\n  return (\r\n    <div>\r\n      <MainPage/>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App/>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}